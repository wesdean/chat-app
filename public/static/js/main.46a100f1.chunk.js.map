{"version":3,"sources":["components/chat.js","pages/chat-page.js","App.js","index.js"],"names":["useStyles","makeStyles","chatForm","width","mainWindow","height","overflow","border","borderRadius","padding","chatText","inputForm","display","flexDirection","marginTop","input","background","margin","button","color","Chat","title","classes","useState","socketClient","connect","socket","setChatText","handle","setHandle","message","setMessage","typing","setTyping","useEffect","on","data","chat","push","_typing","Object","assign","removeListener","className","onSubmit","event","preventDefault","emit","map","entry","index","key","chatEntry","values","value","placeholder","onChange","target","chatWindows","chatContainer","works","noWorks","ChatPage","chatNumber","setChatNumber","href","number","Number","_","times","toString","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46a100f1.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport PropTypes from 'prop-types';\nimport socketClient from 'socket.io-client';\n\nconst useStyles = makeStyles({\n    chatForm: {\n        width: '300px'\n    },\n    mainWindow: {\n        height: '300px',\n        overflow: 'auto',\n        border: '4px solid #00f',\n        borderRadius: '3px',\n        padding: '3px'\n    },\n    chatText: {\n      borderRadius: '3px'\n    },\n    inputForm: {\n        display: 'flex',\n        flexDirection: 'column',\n        border: '3px solid #eee',\n        padding: '6px',\n        borderRadius: '5px',\n        marginTop: '6px'\n    },\n    input: {\n        background: '#fff',\n        padding: '3px',\n        margin: '3px',\n        borderRadius: '5px'\n    },\n    button: {\n        background: '#00f',\n        color: '#eee',\n        borderRadius: '5px'\n    }\n});\n\nconst Chat = ({title}) => {\n    const classes = useStyles();\n\n    const [socket] = useState(socketClient.connect('https://desolate-eyrie-58645.herokuapp.com/'));\n    const [chatText, setChatText] = useState([]);\n    const [handle, setHandle] = useState('');\n    const [message, setMessage] = useState('');\n    const [typing, setTyping] = useState({});\n\n    useEffect(() => {\n        socket.on('chat', data => {\n            const chat = [...chatText];\n            chat.push(data);\n            setChatText(chat);\n        });\n        socket.on('typing', data => {\n            const _typing = Object.assign({}, typing);\n            _typing[data.handle] = data.handle;\n            setTyping(_typing);\n        });\n        socket.on('typing-stopped', data => {\n            const _typing = Object.assign({}, typing);\n            delete _typing[data.handle];\n            setTyping(_typing);\n        });\n\n        // cleanup\n        return () => {\n            socket.removeListener('chat');\n            socket.removeListener('typing');\n            socket.removeListener('typing-stopped');\n        }\n    }, [chatText, typing]);\n\n    const onSubmit = event => {\n        event.preventDefault();\n        socket.emit('chat', {handle, message});\n        setMessage('');\n        socket.emit('typing-stopped', {handle});\n    };\n\n    const onHandleChange = event => setHandle(event.target.value);\n    const onMessageChange = event => {\n        setMessage(event.target.value);\n        if (event.target.value) {\n            socket.emit('typing', {handle});\n        } else {\n            socket.emit('typing-stopped', {handle});\n        }\n    };\n\n    return (\n        <div>\n            <h2>Window: {title}</h2>\n            <form className={classes.chatForm} onSubmit={onSubmit}>\n                <div className={classes.mainWindow}>\n                    <div className={classes.chatText}>\n                        {chatText.map((entry, index) => (\n                            <div key={index} className={classes.chatEntry}>\n                                <strong>{entry.handle}</strong>: {entry.message}\n                            </div>\n                        ))}\n                    </div>\n                    <div className={classes.typing}>\n                        {Object.values(typing).map(handle => (\n                            <div key={handle}><em>{handle} is typing</em></div>\n                        ))}\n                    </div>\n                </div>\n                <div className={classes.inputForm}>\n                    <input className={classes.input} value={handle} placeholder=\"Handle\" onChange={onHandleChange}/>\n                    <input className={classes.input} value={message} placeholder=\"Message\" onChange={onMessageChange}/>\n                    <button className={classes.button}>Send</button>\n                </div>\n            </form>\n        </div>\n    )\n};\n\nChat.propTypes = {\n    title: PropTypes.string.isRequired\n};\n\nexport default Chat;","import React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Chat from \"../components/chat\";\nimport _ from 'lodash';\n\nconst useStyles = makeStyles({\n    chatWindows: {\n        display: 'flex'\n    },\n    chatContainer: {\n        margin: '6px'\n    },\n    works: {\n        color: '#0f0'\n    },\n    noWorks: {\n        color: '#f00'\n    }\n});\n\nconst ChatPage = () => {\n    const classes = useStyles();\n\n    const [chatNumber, setChatNumber] = useState(1);\n\n    const onSubmit = event => {\n        event.preventDefault();\n    };\n\n    const onChatNumberChange = event => {\n        const number = Number(event.target.value);\n        if (number) setChatNumber(number);\n    };\n\n    return (\n        <div>\n            <h1>Chat Demo</h1>\n            <p>\n                This demonstrates a chat app using web sockets. You can select up to 4 chat windows to open in the same window, or open multiple windows.<br/>\n                Each chat window connects to the server and transmits data via web sockets.<br/>\n                See the source on Github at <a href=\"https://github.com/wesdean/chat-app\">https://github.com/wesdean/chat-app</a>.\n            </p>\n            <p>\n                Tested on\n                <ul>\n                    <li>MacOS/Chrome: <span className={classes.works}>works</span></li>\n                    <li>MacOS/Safari: <span className={classes.noWorks}>does not work</span></li>\n                    <li>iOS/Chrome: <span className={classes.noWorks}>does not work</span></li>\n                    <li>iOS/Safari: <span className={classes.noWorks}>does not work</span></li>\n                    <li>iOS/Firefox: <span className={classes.noWorks}>does not work</span></li>\n                </ul>\n            </p>\n            <form onSubmit={onSubmit}>\n                <label>Number of chat windows:\n                    <select onChange={onChatNumberChange} value={chatNumber}>\n                        {[1, 2, 3, 4].map(number => (\n                            <option key={number} value={number}>{number}</option>\n                        ))}\n                    </select>\n                </label>\n            </form>\n            <div className={classes.chatWindows}>\n                {_.times(chatNumber, number => (\n                    <div key={number} className={classes.chatContainer}>\n                        <Chat title={(number + 1).toString()}/>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default ChatPage;","import React from 'react';\nimport ChatPage from \"./pages/chat-page\";\n\nfunction App() {\n  return (\n    <ChatPage/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}